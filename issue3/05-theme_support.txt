Suporte a temas
por James Stewart

It’s the ideal scenario really. You’ve spent many, many 
hours into your project, crafted the business logic so it’s just 
right, and tuned it all to perfection. And then you realize that 
with just slightly tweaked views and a change of stylesheets, 
that same app could serve a different audience. 

Or perhaps that’s rather rare, but you’re busy designing an 
app that from the outset will need to serve multiple clients, 
each of whom will need a bit more customization than a 
simple choice of logo and colour scheme provide. 

===========================================================
James Stewart is a freelance web developer 
and consultant, based in London and primarily 
working with arts organizations and non-profits 
to develop their web presences and improve their 
business processes. Though officially tech-agnostic 
he’s usually happiest building web applications with 
Rails or Merb. Outside of work he’s enjoying the new 
experience of fatherhood, and dabbles in concert promotion. 
===========================================================

In either case you could get round it with careful use of 
layouts, partials and other tricks from the Rails toolkit, but 
that can quickly become cumbersome and isn’t going to scale 
if you need to change different elements for different clients. 
That’s where theme_support plugin comes in. 

Originally released by Matt McCray based on code used in 
the Typo blogging engine by Tobias Luetke, theme_support pro- 
vides support for any number of themes which can override 
any view (whether a full view or a partial) from your main ap- 
plication, and have their own set of assets. So once you’ve got 
your main site set up, all you need to do is add an appropriate 
folder, add some declarations to your ApplicationController to 
identify the right theme, and override where necessary. The 
README file covers most of the particulars. 

Before you rush out and start theming your application, 
there’s something else you ought to know. The plugin keeps 
breaking. It’s not that the code is buggy, but simply that 
goes fairly deeply into Rails, and for a variety of (very good) 
reasons Rails API keep changing. It’s the sort of problem that 
we can all hope will disappear once we have Rails 3 and the 
defined public API, but for the time being some workarounds 
are necessary to get it working for subsequent Rails releases. 

So in that great open source tradition, a few of us have 
begun experimenting with the plugin over on github. It began 
when I created a fork and found a workaround to serve my
fairly modest needs. Since then a couple more forks have 
sprung up and we’re working on resolving them. I also man- 
aged to make a test suit that can help checking the state of the 
plugin with your installed rails version. 


- Resources 

Project page 
http://github.com/jystewart/theme_support/tree/master/ 
Test Application 
http://github.com/jystewart/theme_support_test_app/
 
Discuss: http://railsmagazine.com/3/4