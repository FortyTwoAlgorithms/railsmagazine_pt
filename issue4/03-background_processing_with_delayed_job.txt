Introdução ao processamento em segundo plano

Caso você tenha escrito uma aplicação antes, é provável que você tenha acabado querendo fazer alguma coisa enquanto o usuário esperou por essa coisa, que potencialmente poderiam demorar um pouco. Pode ser gerar um PDF, envio de e-mails em massa, obtendo informação de uma API, ou algo que envolve uma grande quantidade de dados que é lento para carregar. Nestes casos, você pode tirar vantagem de processamento em segundo plano; cortar esta operação em um trabalho ou tarefa, dando-lhe a um trabalhador de fundo que o processe fora da solicitação da web, e retornar os dados para o usuário mais tarde através de AJAX, ou simplesmente no dados que o seu site exibe. Vamos dar um exemplo do mundo real para explorar isso um pouco melhor.

------------------------------------------------------
James Harrison está cursando atualmente Ciência da Computação na Royal Holloway, Universidade de Londres e desenvolve aplicações web em seu tempo livre utilizando Rails.
Seus websites incluem EVE Metrics (http://www. eve-metrics.com), uma ferramenta de análise de mercado para o mundo virtual EVE Online trabalhando com milhões de operações, com centenas de milhares sendo adicionadas a cada dia. Em qualquer momento que sobra, ele faz engenharia de som ao vivo e ajuda com o lado técnico das coisas no teatro local.
------------------------------------------------------

Tenho uma aplicação que pega chave API de um usuário e identificação de usuário e dá a The Game EVE Online. Esta aplicação, em seguida, faz cerca de 10 chamadas para a API com essas credenciais, armazena cerca de 3.000 linhas de dados, bem como o relatório gerado é então disponibilizada para outro usuário do site que solicitou a este relatório. Com esta API-fetching fase potencialmente levando dezenas de segundos ou mais, se os servidores API está sendo lenta ou para baixo, faz sentido para puxar a fase de recuperação de dados para fora para uma tarefa separada que é acionado pelo usuário. O usuário digita seus dados, eles são verificados com uma simples pesquisa rápida para garantir que as credenciais são boas (com um período de tempo curto, no caso dos servidores de API são para baixo), e são dadas um er-ror ou dito que seu relatório está sendo gerado . Uma vez iniciado, o trabalho é armazenado no banco de dados com as suas credenciais, o trabalho é executado e, eventualmente, cuspindo um novo relatório na base de dados que aparece na interface do usuário.